generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  workspaces Workspace[]
  members    Member[]
}

model Workspace {
  id         String    @id @default(cuid())
  name       String
  imageUrl   String?
  inviteCode String    @unique
  userId     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  projects   Project[]
  members    Member[]
  user       User      @relation(fields: [userId], references: [id])
}

model Project {
  id          String   @id @default(cuid())
  name        String
  imageUrl    String?  @db.Text
  workspaceId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  tasks       Task[]
}
enum TaskStatus {
  BACKLOG 
  TODO 
  IN_PROGRESS 
  IN_REVIEW 
  DONE 
}

model Task {
  id          String   @id @default(cuid())
  name        String
  status      TaskStatus
  position    Int
  description String?
  dueDate     DateTime
  workspaceId String
  projectId   String
  assigneeId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  project     Project  @relation(fields: [projectId], references: [id])
}

model Member {
  id          String    @id @default(cuid())
  userId      String
  workspaceId String
  role        MemberRole @default(MEMBER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

enum MemberRole {
  ADMIN
  MEMBER
}
