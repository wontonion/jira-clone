generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

model Session {
  id        String   @id @default(cuid())
  sid       String   @unique  // Session ID for lookup
  data      String   // JSON string of session data
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  workspaces Workspace[]
  members    Member[]
}


model Workspace {
  id         String    @id @default(cuid())
  name       String
  imageUrl   String?
  inviteCode String    @unique
  userId     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  projects   Project[]
  members    Member[]
  user       User      @relation(fields: [userId], references: [id])
}
model Project {
  id          String   @id @default(cuid())
  name        String
  imageUrl    String?
  workspaceId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  tasks       Task[]
}

model Task {
  id          String   @id @default(cuid())
  name        String
  status      String
  position    Int
  description String?
  dueDate     DateTime?
  assigneeId  String?
  projectId   String
  workspaceId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  project     Project  @relation(fields: [projectId], references: [id])
}

model Member {
  id          String    @id @default(cuid())
  userId      String
  workspaceId String
  role        String    @default("MEMBER")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

